# Maintainer: Xiao-Long Chen <chenxiaolong@cxl.epac.to>

# Based on commit b9a15de92091334a6ff3fc9074655f6e5d9f24dd from the fedpkg
# master branch for freeipa.

# NOTE: ntp, autofs, and ntp support is currently broken because the formats of
# the /etc/conf.d/ configuration files in Arch Linux differ from the formats of
# Fedora's /etc/sysconfig/ configuration files.

# Active directory trusts will not (probably never) work in Arch. It requires a
# heavily patched version of Samba 4, which uses MIT Kerberos instead of
# Heimdal. (Fedora went through 174 releases to get this working O_O)

# Client only, for now
build_server=false

# AUR workaround
pkgname=freeipa

pkgbase=freeipa
: && pkgname=('freeipa')

if [ "x${build_server}" == "xtrue" ]; then
  pkgname+=('freeipa-server')
fi

pkgver=3.3.3
pkgrel=1
pkgdesc="The Identity, Policy, and Audit system"
arch=('i686' 'x86_64')
url="http://www.freeipa.org/"
license=('GPL')

# Client dependencies
makedepends=()

# FreeIPA server dependencies
if [ "x${build_server}" == "xtrue" ]; then
  makedepends+=('389-ds-base'
                #'libwbclient'
                'samba'
                'svrcore'
                'talloc'
                'tevent')

  # SELinux dependencies
  #makedepends+=('selinux-refpolicy-arch'
  #              'selinux-usr-checkpolicy'
  #              'selinux-usr-policycoreutils')
fi

# Other dependencies
makedepends+=('curl'
              'java-runtime=7'
              'krb5'
              'libunistring'
              'nspr'
              'nss'
              'openssl'
              'openldap'
              'popt'
              'python2'
              'python2-distribute'
              'python2-dnspython'
              'python2-kerberos'
              'python2-krbv'
              'python2-ldap'
              'python2-lxml'
              'python2-memcached'
              'python2-m2crypto'
              'python2-netaddr'
              'python2-nss'
              'python2-polib'
              'python2-pyasn1'
              'python2-pylint'
              'python2-pyopenssl'
              # Red Hat specific
              #'python2-rhsm'
              'sssd'
              'xmlrpc-c')

# Dependencies for "make check"
checkdepends=('check' 'python2-nose')

options=('!libtool')
source=("http://www.freeipa.org/downloads/src/freeipa-${pkgver}.tar.gz"
        'sss-auth-setup.py'
        '0001-Guard-import-of-adtrustinstance-for-case-without-tru.patch'
        '0002-Increase-stack-size-for-Web-UI-builder.patch'
        '0001_Use_ArchLinux_Paths.patch'
        '0002_Add_ArchLinux_Platform.patch'
        '0003_Use_Python_2.patch'
        '0004_NTP_Fixes.patch'
        '0006_Fix_nss_includes.patch'
        '0007_Disable_make-testcert.patch'
        '0008_Fix_nosetests_path.patch')
sha512sums=('6a9cb820eddf8cd1f8792e9a8de0ae44a5d989003d4f8140961e33768581f1692133ca478da5485537f646cfbf20691ebf1042b7ca60fd650bf765087697bff6'
            '5f101692e311205b3706642c6f329459646aaa693683ab2d4847bd8a7f464ef99ec617b0422df8e25ec2a0dc3a68cd9bf54db4bb3013b84844df15160716adc8'
            'c15dcf7368a0664a9b356a314bfb007c4ae151c623872a1f64ca3ad1ef93076c82f3a48627f9ae9e53860053007def02962148925d296f7d12d78bd60f8d69ee'
            'b48c43b3f445f55783f65c8742667e719bb916add909992ceb9589f1ee626db486128cf71693ccafd4bf91a90262db4dd66ad8e10e4498780be69dd2f7904a15'
            '04d46103852ef22a5afb90a44b8382f5e2f0b24d047ec642a46486fab0d977f679ead17ff9db980d950c9d220225c01174ac5a0fa314806557eb106373b9d486'
            '837228fed8e4c56c7a09783d7c3c777218eb05423512a3848279f50acd7a920d1b354925982a27526c4c1a09fc6f2932f92f511a38130de36b3a4c8a7f3eee19'
            '47affe48342b9114e2205553540c2df9944dea9ed006c666bb4c677e2a1d47ea78e33cd844aeb558c2241ca4d43ad9e2885b89413fead3a8be188524665f6a84'
            '98b8c060bb9c17e927db4c5a5fdd40b022f827082b9da90e035e53f050373b5cd434497f1b31eee3bcbf0a6b471c4a2c0bd155705b06d21deb4d4cfbb8ebc6d0'
            '732bcebdf9795ac38e2e86dccd92a2571714ba080e01a392c782412740a88e35e48b1e968db2ed047462c19d1c89af8c8189408c4ae6f24f2c8b8e9be134fdc2'
            'b58913775e60fe8edd900c42cfc33961c053453c128f3872021713b6dc39ea706480cf3f2ccabd7b2c07aa900cbfda48547c722f8c347fd9ecbd107eecb9fa05'
            'f59422bb5bb511e28c0151afe1d425ecac06130341ef01a922e1595012a8bbc7655b6b711590018406f8cd00ef9702109fdbc74e3e1c13f946ab15d1b3b84a8d')

build() {
  cd "${srcdir}/${pkgbase}-${pkgver}"

  # Apply Fedora's patches
  patch -p1 -i "${srcdir}/0001-Guard-import-of-adtrustinstance-for-case-without-tru.patch"
  patch -p1 -i "${srcdir}/0002-Increase-stack-size-for-Web-UI-builder.patch"

  # Apply my patches
  # 0001_Use_ArchLinux_Paths.patch
  #   Change Fedora's paths to the equivalents in Arch Linux
  patch -p1 -i "${srcdir}/0001_Use_ArchLinux_Paths.patch"
  # 0002_Add_ArchLinux_Platform.patch
  #   Make slight changes to Fedora 18's platform code (systemd service names,
  #   /bin/ -> /usr/bin/, etc) and add a minimal Arch Linux platform that
  #   calls most of Fedora 18's platform, except for AuthConfig
  patch -p1 -i "${srcdir}/0002_Add_ArchLinux_Platform.patch"
  # 0003_Use_Python_2.patch
  #   FreeIPA hasn't been ported to Python 3, so the code must be modified to
  #   run /usr/bin/python2
  patch -p1 -i "${srcdir}/0003_Use_Python_2.patch"
  # 0004_NTP_Fixes.patch
  #   Arch Linux's ntp does not accept the '-U' parameter and does not have a
  #   /etc/sysconfig/ configuration files, so the relevant code must be removed
  patch -p1 -i "${srcdir}/0004_NTP_Fixes.patch"
  # 0006_Fix_nss_includes.patch
  #   Arch Linux's nss package installs the header files to /usr/include/nss/
  #   instead of /usr/include/nss3/
  patch -p1 -i "${srcdir}/0006_Fix_nss_includes.patch"
  # 0007_Disable_make-testcert.patch
  #   make-testcert requires a running certificate server to work properly
  patch -p1 -i "${srcdir}/0007_Disable_make-testcert.patch"
  # 0008_Fix_nosetests_path.patch
  #   Arch Linux's python2-nose package installs nosetests as
  #   /usr/bin/nosetests2
  patch -p1 -i "${srcdir}/0008_Fix_nosetests_path.patch"

  export SUPPORTED_PLATFORM=archlinux
  export PYTHON=python2

  # Force regeneration of platform support
  rm ipapython/services.py

  make version-update

  pushd ipa-client
  ../autogen.sh --prefix=/usr --sysconfdir=/etc --sbindir=/usr/bin
  popd

  if [ "x${build_server}" == "xtrue" ]; then
    pushd daemons
    ../autogen.sh --prefix=/usr --sysconfdir=/etc --sbindir=/usr/bin --with-openldap
    popd

    pushd install
    ../autogen.sh --prefix=/usr --sysconfdir=/etc --sbindir=/usr/bin
    popd

    make IPA_VERSION_IS_GIT_SNAPSHOT=no all
  else
    make IPA_VERSION_IS_GIT_SNAPSHOT=no client
  fi
}

check() {
  cd "${srcdir}/${pkgbase}-${pkgver}"
  # Tests require FreeIPA to be installed and set up
  #make test
}

# All files are in freeipa package. This one is here only for the dependencies.
package_freeipa-server() {
  : && pkgdesc="The IPA authentication server"
  depends=("freeipa=${pkgver}-${pkgrel}"
           '389-ds-base'
           'acl'
           'apache'
           'cyrus-sasl-gssapi'
           'keyutils'
           'krb5'
           'memcached'
           'mod_auth_kerb'
           'mod_nss'
           'mod_wsgi'
           'nss'
           'ntp'
           'openldap'
           'python2-dnspython'
           'python2-krbv'
           'python2-ldap'
           'python2-memcached'
           'python2-pyasn1'
           'slapi-nis'
           'systemd'
           'tomcat7'
           'zip')
  optdepends=('python2-m2crypto: For Microsoft Active Directory trusts'
              'samba: For Microsoft Active Directory trusts'
              'sssd: For Microsoft Active Directory trusts')
  backup=('etc/ipa/html/browserconfig.html'
          'etc/ipa/html/ffconfig.js'
          'etc/ipa/html/ffconfig_page.js'
          'etc/ipa/html/ipa_error.css'
          'etc/ipa/html/ssbrowser.html'
          'etc/ipa/html/unauthorized.html')
  # Backup files created by this package
  backup+=('etc/httpd/conf/extra/ipa-rewrite.conf'
           'etc/httpd/conf/extra/ipa.conf'
           'etc/httpd/conf/extra/ipa-pki-proxy.conf'
           'usr/share/ipa/html/ca.crt')
  install=install.freeipa-server

  # SELinux dependencies
  #depends+=("freeipa-server-selinux=${pkgver}-${pkgrel}"
  #          'selinux-refpolicy-arch'
  #          'selinux-usr-policycoreutils')

  # Conflicts with mod_ssl, but that is a part of the apache package
  #conflicts=('mod_ssl')
}

package_freeipa() {
  : && pkgdesc="IPA authentication for use on clients"
  depends=('autofs'
           'bind'
           'certmonger'
           'curl-gssapi'
           'cyrus-sasl-gssapi'
           'gnupg'
           'iproute2'
           'nfs-utils'
           'nfsidmap'
           'nss'
           'ntp'
           'oddjob'
           'pam-krb5'
           'python2-dnspython'
           'python2-kerberos'
           'python2-krbv'
           'python2-ldap'
           'python2-lxml'
           'python2-netaddr'
           'python2-nss'
           'python2-pyopenssl'
           'sssd'
           'wget'
           'xmlrpc-c')
  backup=('etc/ipa/default.conf'
          'etc/ipa/ca.crt')
  install=install.freeipa

  # authconfig is Fedora specific
  #depends+=('authconfig')

  install -dm755 "${pkgdir}/usr/bin/"
  install -m755 "${srcdir}/sss-auth-setup.py" \
                "${pkgdir}/usr/bin/sss-auth-setup"

  cd "${srcdir}/${pkgbase}-${pkgver}"

  export SUPPORTED_PLATFORM=archlinux
  export PYTHON=python2

  # Force regeneration of platform support
  rm ipapython/services.py

  if [ "x${build_server}" == "xtrue" ]; then
    make install DESTDIR="${pkgdir}"
  else
    make client-install DESTDIR="${pkgdir}"
  fi

  if [ "x${build_server}" == "xtrue" ]; then
    # Some user-modifiable HTML files are provided. Move these to /etc and link
    # back.
    install -dm755 "${pkgdir}/etc/ipa/html/"
    install -dm755 "${pkgdir}/var/cache/ipa/sysrestore/"
    install -dm755 "${pkgdir}/var/cache/ipa/sysupgrade/"
    install -dm755 "${pkgdir}/usr/share/ipa/html/"
    ln -s ../../../../etc/ipa/html/ffconfig.js \
      "${pkgdir}/usr/share/ipa/html/ffconfig.js"
    ln -s ../../../../etc/ipa/html/ffconfig_page.js \
      "${pkgdir}/usr/share/ipa/html/ffconfig_page.js"
    ln -s ../../../../etc/ipa/html/ssbrowser.html \
      "${pkgdir}/usr/share/ipa/html/ssbrowser.html"
    ln -s ../../../../etc/ipa/html/unauthorized.html \
      "${pkgdir}/usr/share/ipa/html/unauthorized.html"
    ln -s ../../../../etc/ipa/html/browserconfig.html \
      "${pkgdir}/usr/share/ipa/html/browserconfig.html"
    ln -s ../../../../etc/ipa/html/ipa_error.css \
      "${pkgdir}/usr/share/ipa/html/ipa_error.css"

    # So we can own our Apache configuration
    install -dm755 "${pkgdir}/etc/httpd/conf/extra/"
    touch "${pkgdir}/etc/httpd/conf/extra/ipa.conf"
    touch "${pkgdir}/etc/httpd/conf/extra/ipa-pki-proxy.conf"
    touch "${pkgdir}/etc/httpd/conf/extra/ipa-rewrite.conf"
    install -dm755 "${pkgdir}/usr/share/ipa/html/"
    touch "${pkgdir}/usr/share/ipa/html/ca.crt"
    touch "${pkgdir}/usr/share/ipa/html/configure.jar"
    touch "${pkgdir}/usr/share/ipa/html/kerberosauth.xpi"
    touch "${pkgdir}/usr/share/ipa/html/krb.con"
    touch "${pkgdir}/usr/share/ipa/html/krb.js"
    touch "${pkgdir}/usr/share/ipa/html/krb5.ini"
    touch "${pkgdir}/usr/share/ipa/html/krbrealm.con"
    touch "${pkgdir}/usr/share/ipa/html/preferences.html"

    # systemd service
    install -dm755 "${pkgdir}/usr/lib/systemd/system/"
    install -m644 \
      init/systemd/ipa.service \
      init/systemd/ipa_memcached.service \
      "${pkgdir}/usr/lib/systemd/system/"

    # Configuration files
    install -dm755 "${pkgdir}/etc/conf.d/"
    install -m644 init/ipa_memcached.conf \
      "${pkgdir}/etc/conf.d/"

    # /run
    install -dm755 "${pkgdir}/run/"
    install -dm700 "${pkgdir}/run/ipa/"
    install -dm700 "${pkgdir}/run/ipa_memcached/"

    # systemd tmpfiles.d configuration
    install -dm755 "${pkgdir}/usr/lib/tmpfiles.d/"
    install -m644 init/systemd/ipa.conf.tmpfiles \
      "${pkgdir}/usr/lib/tmpfiles.d/ipa.conf"

    # bash completion configuration files
    install -dm755 "${pkgdir}/etc/bash_completion.d/"
    install -m644 contrib/completion/ipa.bash_completion \
      "${pkgdir}/etc/bash_completion.d/ipa"

    # Web UI plugin dir
    install -dm755 "${pkgdir}/usr/share/ipa/ui/js/plugins/"

    # Backup directory
    install -dm755 "${pkgdir}/var/lib/ipa/backup/"
  fi

  install -dm755 "${pkgdir}/var/lib/ipa-client/sysrestore/"

  # /etc/ipa/ is needed for ipa-client-install
  install -dm755 "${pkgdir}/etc/ipa/"

  # Fix filenames
  pushd "${pkgdir}/usr/lib/python2.7/site-packages/"
  mv ipapython-${pkgver}*-py2.7.egg-info ipapython-${pkgver}-py2.7.egg-info
  popd

  find "${pkgdir}/" \( -name '*.pyc' -o -name '*.pyo' \) -delete

  # Not packaging the tests for now
  find "${pkgdir}/" -type f | grep '\.py' | grep ipatests | xargs rm -f
}
