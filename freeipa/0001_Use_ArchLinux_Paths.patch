diff -Nru freeipa-3.0.1.orig/install/conf/ca_renewal freeipa-3.0.1/install/conf/ca_renewal
--- freeipa-3.0.1.orig/install/conf/ca_renewal	2012-11-16 16:16:18.751841000 -0500
+++ freeipa-3.0.1/install/conf/ca_renewal	2012-11-16 16:16:42.500238000 -0500
@@ -3,4 +3,4 @@
 id=dogtag-ipa-retrieve-agent-submit
 ca_is_default=0
 ca_type=EXTERNAL
-ca_external_helper=/usr/libexec/certmonger/dogtag-ipa-retrieve-agent-submit
+ca_external_helper=/usr/lib/certmonger/certmonger/dogtag-ipa-retrieve-agent-submit
diff -Nru freeipa-3.0.1.orig/install/conf/ipa.conf freeipa-3.0.1/install/conf/ipa.conf
--- freeipa-3.0.1.orig/install/conf/ipa.conf	2012-11-16 16:16:18.752270000 -0500
+++ freeipa-3.0.1/install/conf/ipa.conf	2012-11-16 16:16:50.913588000 -0500
@@ -24,7 +24,7 @@
 
 
 # FIXME: WSGISocketPrefix is a server-scope directive.  The mod_wsgi package
-# should really be fixed by adding this its /etc/httpd/conf.d/wsgi.conf:
+# should really be fixed by adding this its /etc/httpd/conf/extra/wsgi.conf:
 WSGISocketPrefix /var/run/httpd/wsgi
 
 
diff -Nru freeipa-3.0.1.orig/install/tools/ipa-upgradeconfig freeipa-3.0.1/install/tools/ipa-upgradeconfig
--- freeipa-3.0.1.orig/install/tools/ipa-upgradeconfig	2012-11-16 16:16:18.622128000 -0500
+++ freeipa-3.0.1/install/tools/ipa-upgradeconfig	2012-11-16 16:17:36.270716000 -0500
@@ -117,7 +117,7 @@
 
 def find_hostname():
     """Find the hostname currently configured in ipa-rewrite.conf"""
-    filename="/etc/httpd/conf.d/ipa-rewrite.conf"
+    filename="/etc/httpd/conf/extra/ipa-rewrite.conf"
 
     if not ipautil.file_exists(filename):
         return None
@@ -140,7 +140,7 @@
 
     Returns True if autoredirect is enabled, False otherwise
     """
-    filename = '/etc/httpd/conf.d/ipa-rewrite.conf'
+    filename = '/etc/httpd/conf/extra/ipa-rewrite.conf'
     if os.path.exists(filename):
         pattern = "^RewriteRule \^/\$ https://%s/ipa/ui \[L,NC,R=301\]" % fqdn
         p = re.compile(pattern)
@@ -626,9 +626,9 @@
                                          '=')
         sub_dict['CLONE']='#' if crl.lower() == 'true' else ''
 
-    upgrade(sub_dict, "/etc/httpd/conf.d/ipa.conf", ipautil.SHARE_DIR + "ipa.conf")
-    upgrade(sub_dict, "/etc/httpd/conf.d/ipa-rewrite.conf", ipautil.SHARE_DIR + "ipa-rewrite.conf")
-    upgrade(sub_dict, "/etc/httpd/conf.d/ipa-pki-proxy.conf", ipautil.SHARE_DIR + "ipa-pki-proxy.conf", add=True)
+    upgrade(sub_dict, "/etc/httpd/conf/extra/ipa.conf", ipautil.SHARE_DIR + "ipa.conf")
+    upgrade(sub_dict, "/etc/httpd/conf/extra/ipa-rewrite.conf", ipautil.SHARE_DIR + "ipa-rewrite.conf")
+    upgrade(sub_dict, "/etc/httpd/conf/extra/ipa-pki-proxy.conf", ipautil.SHARE_DIR + "ipa-pki-proxy.conf", add=True)
     upgrade_pki(ca, fstore)
     update_dbmodules(api.env.realm)
     uninstall_ipa_kpasswd()
diff -Nru freeipa-3.0.1.orig/install/tools/man/ipa-upgradeconfig.8 freeipa-3.0.1/install/tools/man/ipa-upgradeconfig.8
--- freeipa-3.0.1.orig/install/tools/man/ipa-upgradeconfig.8	2012-11-16 16:16:18.609474000 -0500
+++ freeipa-3.0.1/install/tools/man/ipa-upgradeconfig.8	2012-11-16 16:17:52.593384000 -0500
@@ -24,7 +24,7 @@
 .SH "DESCRIPTION"
 A tool to update the IPA Apache configuration during an upgrade.
 
-It examines the VERSION value in the head of \fI/etc/httpd/conf.d/ipa.conf\fR and \fI/etc/httpd/conf.d/ipa\-rewrite.conf\fR and compares this with the templates. If an update is needed then new files are written.
+It examines the VERSION value in the head of \fI/etc/httpd/conf/extra/ipa.conf\fR and \fI/etc/httpd/conf/extra/ipa\-rewrite.conf\fR and compares this with the templates. If an update is needed then new files are written.
 
 It also will convert a CA configured to be accessible via ports 9443, 9444, 9445 and 9446 to be proxied by the IPA web server on ports 80 and 443.
 
diff -Nru freeipa-3.0.1.orig/ipa-client/ipa-install/ipa-client-install freeipa-3.0.1/ipa-client/ipa-install/ipa-client-install
--- freeipa-3.0.1.orig/ipa-client/ipa-install/ipa-client-install	2012-11-16 16:16:19.338614000 -0500
+++ freeipa-3.0.1/ipa-client/ipa-install/ipa-client-install	2012-11-16 16:18:04.763569000 -0500
@@ -512,7 +512,7 @@
             # to this version but not unenrolled/enrolled again
             # In such case it is OK to fail
             restored = fstore.restore_file("/etc/ntp.conf")
-            restored |= fstore.restore_file("/etc/sysconfig/ntpd")
+            restored |= fstore.restore_file("/etc/conf.d/ntpd.conf")
             if ntp_step_tickers:
                restored |= fstore.restore_file("/etc/ntp/step-tickers")
         except Exception:
diff -Nru freeipa-3.0.1.orig/ipapython/certmonger.py freeipa-3.0.1/ipapython/certmonger.py
--- freeipa-3.0.1.orig/ipapython/certmonger.py	2012-11-16 16:16:18.543827000 -0500
+++ freeipa-3.0.1/ipapython/certmonger.py	2012-11-16 16:18:25.888178000 -0500
@@ -298,7 +298,7 @@
     If the hostname we were passed to use in ipa-client-install doesn't
     match the value of gethostname() then we need to append
     -k host/HOSTNAME@REALM to the ca helper defined for
-    /usr/libexec/certmonger/ipa-submit.
+    /usr/lib/certmonger/certmonger/ipa-submit.
 
     We also need to restore this on uninstall.
 
diff -Nru freeipa-3.0.1.orig/ipapython/platform/systemd.py freeipa-3.0.1/ipapython/platform/systemd.py
--- freeipa-3.0.1.orig/ipapython/platform/systemd.py	2012-11-16 16:16:18.540089000 -0500
+++ freeipa-3.0.1/ipapython/platform/systemd.py	2012-11-16 16:19:24.926587000 -0500
@@ -90,11 +90,11 @@
             ipautil.wait_for_open_ports('localhost', ports, api.env.startup_timeout)
 
     def stop(self, instance_name="", capture_output=True):
-        ipautil.run(["/bin/systemctl", "stop", self.service_instance(instance_name)], capture_output=capture_output)
+        ipautil.run(["/usr/bin/systemctl", "stop", self.service_instance(instance_name)], capture_output=capture_output)
         super(SystemdService, self).stop(instance_name)
 
     def start(self, instance_name="", capture_output=True, wait=True):
-        ipautil.run(["/bin/systemctl", "start", self.service_instance(instance_name)], capture_output=capture_output)
+        ipautil.run(["/usr/bin/systemctl", "start", self.service_instance(instance_name)], capture_output=capture_output)
         if wait and self.is_running(instance_name):
             self.__wait_for_open_ports(self.service_instance(instance_name))
         super(SystemdService, self).start(instance_name)
@@ -102,14 +102,14 @@
     def restart(self, instance_name="", capture_output=True, wait=True):
         # Restart command is broken before systemd-36-3.fc16
         # If you have older systemd version, restart of dependent services will hang systemd indefinetly
-        ipautil.run(["/bin/systemctl", "restart", self.service_instance(instance_name)], capture_output=capture_output)
+        ipautil.run(["/usr/bin/systemctl", "restart", self.service_instance(instance_name)], capture_output=capture_output)
         if wait and self.is_running(instance_name):
             self.__wait_for_open_ports(self.service_instance(instance_name))
 
     def is_running(self, instance_name=""):
         ret = True
         try:
-            (sout, serr, rcode) = ipautil.run(["/bin/systemctl", "is-active", self.service_instance(instance_name)],capture_output=True)
+            (sout, serr, rcode) = ipautil.run(["/usr/bin/systemctl", "is-active", self.service_instance(instance_name)],capture_output=True)
             if rcode != 0:
                 ret = False
         except ipautil.CalledProcessError:
@@ -119,7 +119,7 @@
     def is_installed(self):
         installed = True
         try:
-            (sout,serr,rcode) = ipautil.run(["/bin/systemctl", "list-unit-files", "--full"])
+            (sout,serr,rcode) = ipautil.run(["/usr/bin/systemctl", "list-unit-files", "--full"])
             if rcode != 0:
                 installed = False
             else:
@@ -134,7 +134,7 @@
     def is_enabled(self, instance_name=""):
         enabled = True
         try:
-            (sout,serr,rcode) = ipautil.run(["/bin/systemctl", "is-enabled", self.service_instance(instance_name)])
+            (sout,serr,rcode) = ipautil.run(["/usr/bin/systemctl", "is-enabled", self.service_instance(instance_name)])
             if rcode != 0:
                 enabled = False
         except ipautil.CalledProcessError, e:
@@ -179,7 +179,7 @@
                         # Link exists and it is broken, make new one
                         os.unlink(srv_lnk)
                         os.symlink(self.lib_path, srv_lnk)
-                ipautil.run(["/bin/systemctl", "--system", "daemon-reload"])
+                ipautil.run(["/usr/bin/systemctl", "--system", "daemon-reload"])
             except:
                 pass
         else:
@@ -197,7 +197,7 @@
                 if ipautil.dir_exists(srv_tgt):
                     if os.path.islink(srv_lnk):
                         os.unlink(srv_lnk)
-                ipautil.run(["/bin/systemctl", "--system", "daemon-reload"])
+                ipautil.run(["/usr/bin/systemctl", "--system", "daemon-reload"])
             except:
                 pass
         else:
@@ -205,13 +205,13 @@
 
     def __enable(self, instance_name=""):
         try:
-            ipautil.run(["/bin/systemctl", "enable", self.service_instance(instance_name)])
+            ipautil.run(["/usr/bin/systemctl", "enable", self.service_instance(instance_name)])
         except ipautil.CalledProcessError, e:
             pass
 
     def __disable(self, instance_name=""):
         try:
-            ipautil.run(["/bin/systemctl", "disable", self.service_instance(instance_name)])
+            ipautil.run(["/usr/bin/systemctl", "disable", self.service_instance(instance_name)])
         except ipautil.CalledProcessError, e:
             pass
 
diff -Nru freeipa-3.0.1.orig/ipaserver/install/cainstance.py freeipa-3.0.1/ipaserver/install/cainstance.py
--- freeipa-3.0.1.orig/ipaserver/install/cainstance.py	2012-11-16 16:16:19.312810000 -0500
+++ freeipa-3.0.1/ipaserver/install/cainstance.py	2012-11-16 16:19:54.509756000 -0500
@@ -59,7 +59,7 @@
 from ipalib import util
 from ipapython.ipa_log_manager import *
 
-HTTPD_CONFD = "/etc/httpd/conf.d/"
+HTTPD_CONFD = "/etc/httpd/conf/extra/"
 DEFAULT_DSPORT=7389
 
 PKI_USER = "pkiuser"
diff -Nru freeipa-3.0.1.orig/ipaserver/install/httpinstance.py freeipa-3.0.1/ipaserver/install/httpinstance.py
--- freeipa-3.0.1.orig/ipaserver/install/httpinstance.py	2012-11-16 16:16:19.312567000 -0500
+++ freeipa-3.0.1/ipaserver/install/httpinstance.py	2012-11-16 16:20:57.194581000 -0500
@@ -35,8 +35,8 @@
 from ipalib import util, api
 
 HTTPD_DIR = "/etc/httpd"
-SSL_CONF = HTTPD_DIR + "/conf.d/ssl.conf"
-NSS_CONF = HTTPD_DIR + "/conf.d/nss.conf"
+SSL_CONF = HTTPD_DIR + "/conf/extra/ssl.conf"
+NSS_CONF = HTTPD_DIR + "/conf/extra/nss.conf"
 
 selinux_warning = """
 WARNING: could not set selinux boolean(s) %(var)s to true.  The web
@@ -190,17 +190,17 @@
         installutils.remove_file('/tmp/krb5cc_%d' % pent.pw_uid)
 
     def __configure_http(self):
-        target_fname = '/etc/httpd/conf.d/ipa.conf'
+        target_fname = '/etc/httpd/conf/extra/ipa.conf'
         http_txt = ipautil.template_file(ipautil.SHARE_DIR + "ipa.conf", self.sub_dict)
-        self.fstore.backup_file("/etc/httpd/conf.d/ipa.conf")
+        self.fstore.backup_file("/etc/httpd/conf/extra/ipa.conf")
         http_fd = open(target_fname, "w")
         http_fd.write(http_txt)
         http_fd.close()
         os.chmod(target_fname, 0644)
 
-        target_fname = '/etc/httpd/conf.d/ipa-rewrite.conf'
+        target_fname = '/etc/httpd/conf/extra/ipa-rewrite.conf'
         http_txt = ipautil.template_file(ipautil.SHARE_DIR + "ipa-rewrite.conf", self.sub_dict)
-        self.fstore.backup_file("/etc/httpd/conf.d/ipa-rewrite.conf")
+        self.fstore.backup_file("/etc/httpd/conf/extra/ipa-rewrite.conf")
         http_fd = open(target_fname, "w")
         http_fd.write(http_txt)
         http_fd.close()
@@ -228,8 +228,8 @@
 
     def __add_include(self):
         """This should run after __set_mod_nss_port so is already backed up"""
-        if installutils.update_file(NSS_CONF, '</VirtualHost>', 'Include conf.d/ipa-rewrite.conf\n</VirtualHost>') != 0:
-            print "Adding Include conf.d/ipa-rewrite to %s failed." % NSS_CONF
+        if installutils.update_file(NSS_CONF, '</VirtualHost>', 'Include conf/extra/ipa-rewrite.conf\n</VirtualHost>') != 0:
+            print "Adding Include conf/extra/ipa-rewrite to %s failed." % NSS_CONF
 
     def __setup_ssl(self):
         fqdn = None
@@ -370,7 +370,7 @@
         if not enabled is None and not enabled:
             self.disable()
 
-        for f in ["/etc/httpd/conf.d/ipa.conf", SSL_CONF, NSS_CONF]:
+        for f in ["/etc/httpd/conf/extra/ipa.conf", SSL_CONF, NSS_CONF]:
             try:
                 self.fstore.restore_file(f)
             except ValueError, error:
@@ -378,9 +378,9 @@
                 pass
 
         # Remove the configuration files we create
-        installutils.remove_file("/etc/httpd/conf.d/ipa-rewrite.conf")
-        installutils.remove_file("/etc/httpd/conf.d/ipa.conf")
-        installutils.remove_file("/etc/httpd/conf.d/ipa-pki-proxy.conf")
+        installutils.remove_file("/etc/httpd/conf/extra/ipa-rewrite.conf")
+        installutils.remove_file("/etc/httpd/conf/extra/ipa.conf")
+        installutils.remove_file("/etc/httpd/conf/extra/ipa-pki-proxy.conf")
 
         for var in ["httpd_can_network_connect", "httpd_manage_ipa"]:
             sebool_state = self.restore_state(var)
